import{_ as e,r as o,o as c,a as l,b as n,e as p,F as u,d as s,c as t}from"./app.1c4ce4b7.js";const r={},i=n("h1",{id:"promise",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#promise","aria-hidden":"true"},"#"),s(" Promise")],-1),k=s("\u5728\u6211\u4EEC\u5B66\u4E60 Promise \u4E4B\u524D\uFF0C\u5927\u5BB6\u53EF\u4EE5\u5148\u53BB MDN \u770B\u4E00\u4E0B\u5BF9 Promise \u7684\u4ECB\u7ECD\u3002"),m={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},b=s("MDN-Promise"),d=s("\u540C\u65F6\uFF0CPromise \u6709\u7740\u5B83\u81EA\u5DF1\u7684\u89C4\u8303\uFF0C\u5927\u5BB6\u4E5F\u53EF\u4EE5\u53BB\u770B\u4E00\u770B"),g={href:"https://promisesaplus.com/",target:"_blank",rel:"noopener noreferrer"},v=s("Promise/A+"),f=t(`<p>\u63A5\u4E0B\u6765\u6211\u7528\u81EA\u5DF1\u7684\u7406\u89E3\u7ED9\u5927\u5BB6\u4ECB\u7ECD\u4E00\u4E9B Promise \u7684\u57FA\u672C\u7279\u6027\uFF1A</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li><p>Promise \u662F\u4E00\u4E2A<code>\u7C7B</code>\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u8BA4\u4E3A\u5B83\u662F\u4E00\u4E2A<code>\u6784\u9020\u51FD\u6570</code>\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7<code>new</code>\u5173\u952E\u5B57\u6765\u4F7F\u7528\u5B83\u3002</p></li><li><p>\u5B83\u53EF\u4EE5\u63A5\u6536<code>\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570</code>\uFF0C\u8BE5\u51FD\u6570\u53EF\u4EE5\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF0C\u8FD9\u4E24\u4E2A\u53C2\u6570\u4E5F\u4E3A<code>\u51FD\u6570</code>\uFF0C\u901A\u5E38\u6211\u4EEC\u79F0\u4E4B\u4E3A<code>resolve</code>\uFF0C<code>reject</code>\u3002</p></li><li><p>Promise \u662F\u6709\u72B6\u6001\u7684\uFF0C\u5E76\u4E14\u72B6\u6001<strong>\u4E00\u65E6\u6539\u53D8\u5C31\u786E\u5B9A\u4E0B\u6765\uFF0C\u4E0D\u53EF\u9006\u8F6C</strong>\uFF0C\u9ED8\u8BA4\u72B6\u6001\u4E3A<code>pending\uFF08\u521D\u59CB\u72B6\u6001\uFF09</code>\uFF0C\u5982\u679C\u6211\u4EEC<strong>\u8C03\u7528 resolve</strong>\uFF0C\u72B6\u6001\u5C31\u4F1A\u53D8\u4E3A<code>fulfilled\uFF08\u5DF2\u5151\u73B0\uFF09</code>\uFF0C\u5982\u679C\u6211\u4EEC<strong>\u8C03\u7528 reject</strong>\uFF0C\u72B6\u6001\u5C31\u4F1A\u53D8\u4E3A<code>rejected\uFF08\u5DF2\u62D2\u7EDD\uFF09</code></p></li><li><p>\u521B\u5EFA\u4E00\u4E2A Promise \u5BF9\u8C61\u4E4B\u540E\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7<code>.then</code>\u6765\u63A5\u6536 Promise \u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u56DE\u8C03\u51FD\u6570\u4E2D\u4E5F\u53EF\u4EE5\u4F20\u5165<code>\u4E24\u4E2A\u53C2\u6570</code>\uFF0C\u8FD9\u4E24\u4E2A\u53C2\u6570<code>\u4E5F\u662F\u51FD\u6570</code>\uFF0C\u5206\u522B\u63A5\u6536<code>\u8C03\u7528resolve\u4EA7\u751F\u7684\u56DE\u8C03</code>\u4EE5\u53CA<code>\u8C03\u7528reject\u4EA7\u751F\u7684\u56DE\u8C03</code></p></li></ul></div><h2 id="promise-\u7684\u57FA\u672C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#promise-\u7684\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a> Promise \u7684\u57FA\u672C\u4F7F\u7528</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FD9\u6837\u6211\u4EEC\u5C31\u5F97\u5230\u4E86\u4E00\u4E2A\u5E26\u6709\u53C2\u6570\u7684promise\u5BF9\u8C61</span>
<span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u63A5\u6536\u56DE\u8C03</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8C03\u7528resolve</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u63A5\u53D7resolve\u56DE\u8C03</span>
promise1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u662Fresolve\u7684\u56DE\u8C03&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8C03\u7528reject</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u63A5\u53D7reject\u56DE\u8C03</span>
promise2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u662Fresolve\u7684\u56DE\u8C03&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u662Freject\u7684\u56DE\u8C03&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u901A\u8FC7\u4E0A\u8FF0\u4EE3\u7801\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA\uFF0C<strong>\u5F53 Promise \u8C03\u7528 resolve \u65B9\u6CD5\u65F6\uFF0CPromise \u7684\u72B6\u6001\u4ECE pending \u53D8\u4E3A\u4E86 fulfilled\uFF0C.then \u4E2D\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u53EF\u4EE5\u6355\u83B7\u5230 resolve \u7684\u56DE\u8C03\uFF0C\u5F53 Promise \u8C03\u7528 reject \u65B9\u6CD5\u65F6\uFF0CPromise \u7684\u72B6\u6001\u4ECE pending \u53D8\u4E3A\u4E86 rejected\uFF0C.then \u4E2D\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u53EF\u4EE5\u6355\u83B7\u5230 reject \u7684\u56DE\u8C03</strong>\u3002</p><p>\u53EF\u80FD\u6709\u4E9B\u4EBA\u4F1A\u6709\u7591\u60D1\uFF0C\u5E73\u65F6\u5728\u9879\u76EE\u5F00\u53D1\u4E2D\uFF0C\u6211\u4EEC\u7684.then \u4E0D\u90FD\u662F\u53EA\u63A5\u6536\u4E00\u4E2A\u53C2\u6570\u7684\u5417\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8C03\u7528reject</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u662Fresolve\u7684\u56DE\u8C03&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u662Freject\u7684\u56DE\u8C03&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u6211\u4EEC\u53D1\u73B0\u8FD9\u79CD\u65B9\u5F0F\u7684\u786E\u4E5F\u53EF\u4EE5\u6355\u83B7\u5230 reject \u7684\u56DE\u8C03\uFF0C\u7A76\u7ADF\u54EA\u79CD\u662F\u6B63\u786E\u7684\u5462\uFF1F</p>`,10),h=s("\u5176\u5B9E\u5B83\u4EEC\u90FD\u6CA1\u6709\u9519\uFF0C\u53EA\u662F\u7B2C\u4E8C\u79CD\u65B9\u5F0F\u4E0D\u7B26\u5408"),j={href:"https://promisesaplus.com/",target:"_blank",rel:"noopener noreferrer"},P=s("Promise/A+"),w=s("\u89C4\u8303\uFF0C\u4E0D\u8FC7\u5B83\u770B\u8D77\u6765\u53EF\u4EE5\u8BA9\u4EE3\u7801\u66F4\u52A0\u7684\u987A\u7545\uFF0C\u53EF\u8BFB\u6027\u5F3A\u3002"),y=t(`<h2 id="resolve-reject-\u4F20\u53C2" tabindex="-1"><a class="header-anchor" href="#resolve-reject-\u4F20\u53C2" aria-hidden="true">#</a> resolve/reject \u4F20\u53C2</h2><p>\u65E2\u7136 resolve \u548C reject \u662F\u51FD\u6570\uFF0C\u90A3\u4E48\u5B83\u4EEC\u80AF\u5B9A\u662F\u53EF\u4EE5\u4F20\u5165\u53C2\u6570\u7684\uFF0C\u5982\u679C\u7ED9\u5B83\u4EEC\u4F20\u5165\u53C2\u6570\u4F1A\u6709\u4EC0\u4E48\u6548\u679C\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">456</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return 123</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return 456</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u6211\u4EEC\u5206\u522B\u7ED9 resolve \u548C reject \u4F20\u5165\u4E86\u4E00\u4E2A<strong>\u666E\u901A\u7684\u503C\u4F5C\u4E3A\u53C2\u6570</strong>\uFF0C\u6211\u4EEC\u53D1\u73B0\uFF0C<strong>resolve \u7684\u53C2\u6570\u4F1A\u4F5C\u4E3A.then \u7B2C\u4E00\u4E2A\u53C2\u6570\u7684\u53C2\u6570\u4F20\u5165\uFF0Creject \u7684\u53C2\u6570\u4F1A\u4F5C\u4E3A.then \u7B2C\u4E8C\u4E2A\u53C2\u6570\u7684\u53C2\u6570\u4F20\u5165</strong>\u3002</p><p>\u5982\u679C\u6211\u4EEC<strong>\u4F20\u5165\u4E00\u4E2A Promise \u5BF9\u8C61\u4F5C\u4E3A\u53C2\u6570</strong>\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> innerPromise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> outPromise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>innerPromise<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

outPromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u6211\u7B49\u4E86\u534A\u5929\uFF0C\u5565\u4E5F\u6CA1\u7B49\u5230\uFF0C\u8BB2\u9053\u7406\u5B83\u5E94\u8BE5\u7ED9\u6211\u6253\u5370\u51FA\u6765\u4E00\u4E2A Promise \u5BF9\u8C61\u554A\uFF0C\u6211\u628A\u5B83\u4F20\u8FDB\u6765\u5B83\u4E3A\u4EC0\u4E48\u63A5\u6536\u4E0D\u5230\u5462\uFF1F\u6211\u8BA9\u4F20\u5165\u7684 Promise \u6539\u53D8\u4E00\u4E0B\u72B6\u6001\u8BD5\u8BD5\u770B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> innerPromise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// resolve(123);</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">456</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> outPromise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>innerPromise<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

outPromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 123</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 456</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8FD9\u4E0B\u53D1\u73B0\u4E86\u732B\u817B\uFF0C\u4F20\u5165\u7684 Promise \u5BF9\u8C61\u5982\u679C\u6709\u4E86\u72B6\u6001\uFF0C.then \u4E2D\u7684\u56DE\u8C03\u5C31\u4F1A\u6839\u636E\u4F20\u5165\u7684 Promise \u7684\u72B6\u6001\u6765\u6267\u884C\u4E0D\u540C\u7684\u56DE\u8C03\uFF0C\u6211\u4E0D\u4FE1\uFF0C\u5EF6\u8FDF\u4E00\u4E0B\u8BD5\u8BD5\u770B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> innerPromise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> outPromise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>innerPromise<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

outPromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 123</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u7ED3\u679C\u53D1\u73B0\uFF0C\u8FC7\u4E86\u4E24\u79D2\u949F\u4E4B\u540E\uFF0C\u6253\u5370\u51FA\u4E86 123\uFF0C\u539F\u6765\u8FD8\u771F\u7684\u662F\uFF0C<strong>\u5982\u679C\u4F20\u5165 Promise \u4F5C\u4E3A resolve \u7684\u53C2\u6570\uFF0C\u90A3\u4E48\u5916\u90E8\u7684 Promise \u5C31\u4F1A\u7B49\u5F85\u5185\u90E8 Promise \u7684\u7ED3\u679C\uFF0C\u5185\u90E8\u7684 Promise \u7684\u72B6\u6001\u5C31\u4F1A\u4F5C\u4E3A\u5916\u90E8 Promise \u7684\u72B6\u6001\uFF0C\u800C\u5185\u90E8\u7684 Promise \u7684\u56DE\u8C03\u7684\u503C\uFF0C\u4F1A\u4F5C\u4E3A\u5916\u90E8 Promise \u7684\u56DE\u8C03\u7684\u503C</strong>\u3002</p><p>\u901A\u8FC7\u6D4B\u8BD5\uFF0C\u6211\u53D1\u73B0\uFF0C\u5982\u679C\u5728 reject \u4E2D\u4F20\u5165 Promise \u4F5C\u4E3A\u53C2\u6570\uFF0C<strong>\u5982\u679C\u5185\u90E8\u7684 Promise \u6709\u7ED3\u679C\uFF0C\u90A3\u4E48\u5C31\u4F1A\u6253\u5370\u51FA\u4E00\u4E2A\u5E26\u6709\u7ED3\u679C\u548C\u503C\u7684 Promise \u5BF9\u8C61</strong>\uFF0C<strong>\u5982\u679C\u6211\u4EEC\u662F\u5EF6\u65F6\u6267\u884C\u7684\uFF0C\u5B83\u4E5F\u4F1A\u7ACB\u9A6C\u6253\u5370\u51FA\u4E00\u4E2A pending \u72B6\u6001\u7684 Promise \u5BF9\u8C61</strong>\u3002</p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u518D\u770B\u4E00\u4E2A\u6709\u8DA3\u7684\u4E1C\u897F\uFF0C\u4F20\u5165\u4E00\u4E2A\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F20\u5165\u666E\u901A\u5BF9\u8C61</span>
<span class="token keyword">const</span> promiseBase <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return { a: 123 }</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> thenable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// resolve(123);</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">456</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>thenable<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return 123</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return 456</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>\u901A\u8FC7\u4E0A\u9762\u7684\u4EE3\u7801\uFF0C\u6211\u4EEC\u53D1\u73B0<strong>\u4F20\u5165\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61\uFF0CPromise \u4F1A\u628A\u8FD9\u4E2A\u5BF9\u8C61\u539F\u5C01\u4E0D\u52A8\u7684\u8FD4\u56DE\u7ED9.then\uFF0C\u4F46\u662F\u4F20\u5165\u4E00\u4E2A<code>\u91CC\u9762\u5305\u542Bthen\u65B9\u6CD5\uFF0C\u5E76\u4E14\u8BE5then\u65B9\u6CD5\u6267\u884C\u4E86resolve\u6216reject\u7684\u5BF9\u8C61</code>\uFF0C\u7ED3\u679C\u5C31\u4F1A\u53D8\u4E3A\u8BE5\u5BF9\u8C61\u7684 then \u65B9\u6CD5\u7684\u7ED3\u679C\u4F5C\u4E3A Promise \u7684\u7ED3\u679C</strong>\u3002\u901A\u5E38\u6211\u4EEC\u628A\u8FD9\u79CD\u5BF9\u8C61\u79F0\u4E3A<code>thenable\u5BF9\u8C61</code></p><p><img src="https://img.soogif.com/IZWMjj1SQSlWUsKjc4tHm1vQ5xvo6Scm.png?scope=mdnice" alt=""></p><p>\u6211\u4EEC\u518D\u52A0\u4E2A\u5B9A\u65F6\u5668\u8BD5\u9A8C\u4E00\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> thenable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>thenable<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return 123</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return 456</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u679C\u7136\uFF0C\u5B83\u7ADF\u7136\u7B49\u4E86\u4E24\u79D2\u5F97\u5230\u4E86\u7ED3\u679C\uFF01</p><p>\u4E8E\u662F\u6211\u4EEC\u603B\u7ED3\u51FA\u4E86\u4EE5\u4E0B\u89C4\u5F8B\uFF1A</p><ol><li><p>\u5982\u679C resolve/reject \u4F20\u5165\u4E00\u4E2A<strong>\u666E\u901A\u503C\uFF08\u5305\u62EC\u666E\u901A\u5BF9\u8C61\uFF09</strong>\uFF0C\u90A3\u4E48\u4F1A\u5C06\u8BE5\u503C<strong>\u539F\u5C01\u4E0D\u52A8\u7684\u505A\u4E3A.then \u4E2D\u7684\u53C2\u6570\u88AB resolve/reject \u7684\u56DE\u8C03\u63A5\u6536</strong>\u3002</p></li><li><p>\u5982\u679C resolve/reject \u4F20\u5165\u4E00\u4E2A <strong>Promise \u5BF9\u8C61</strong>\uFF0C\u90A3\u4E48\u4F1A\u5C06<strong>Promise \u5BF9\u8C61\u7684\u503C\u505A\u4E3A.then \u4E2D\u7684\u53C2\u6570\u88AB resolve/reject \u7684\u56DE\u8C03\u63A5\u6536</strong>\uFF0C\u5982\u679C\u6709\u5EF6\u65F6\u6267\u884C\uFF0C.then \u4F1A\u7B49\u5F85\u4F20\u5165\u7684 Promise \u6709\u7ED3\u679C\u4E4B\u540E\u624D\u4F1A\u6267\u884C\u3002</p></li><li><p>\u5982\u679C resolve/reject \u4F20\u5165\u4E00\u4E2A <strong>thenable \u5BF9\u8C61</strong>\uFF0C\u90A3\u4E48\u4F1A\u5C06<strong>thenable \u5BF9\u8C61\u7684 resolve \u6216 reject \u7684\u7ED3\u679C\u505A\u4E3A.then \u4E2D\u7684\u53C2\u6570\u88AB resolve/reject \u7684\u56DE\u8C03\u63A5\u6536</strong>\uFF0C\u5982\u679C\u6709\u5EF6\u65F6\u6267\u884C\uFF0C.then \u4F1A\u7B49\u5F85\u4F20\u5165\u7684 thenable \u6709\u7ED3\u679C\u4E4B\u540E\u624D\u4F1A\u6267\u884C\u3002</p></li></ol><h2 id="\u5BF9\u8C61\u65B9\u6CD5-then" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u65B9\u6CD5-then" aria-hidden="true">#</a> \u5BF9\u8C61\u65B9\u6CD5 then</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>then() \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A Promise\u3002\u5B83<strong>\u6700\u591A</strong>\u9700\u8981\u6709<strong>\u4E24\u4E2A\u53C2\u6570</strong>\uFF1A<strong>Promise \u7684\u6210\u529F\u548C\u5931\u8D25\u60C5\u51B5\u7684\u56DE\u8C03\u51FD\u6570</strong>\u3002</p><p>\u53C2\u6570\uFF1AonFulfilled \u53EF\u9009 onRejected \u53EF\u9009</p><p>onFulFilled <strong>\u662F\u5F53 Promise \u53D8\u6210\u63A5\u53D7\u72B6\u6001\uFF08fulfilled\uFF09\u65F6\u8C03\u7528\u7684\u51FD\u6570</strong>\u3002\u8BE5\u51FD\u6570\u6709\u4E00\u4E2A\u53C2\u6570\uFF0C\u5373\u63A5\u53D7\u7684\u6700\u7EC8\u7ED3\u679C\u3002\u5982\u679C\u8BE5\u53C2\u6570\u4E0D\u662F\u51FD\u6570\uFF0C\u5219\u4F1A\u5728\u5185\u90E8\u88AB\u66FF\u6362\u4E3A (x) =&gt; x\uFF0C\u5373\u539F\u6837\u8FD4\u56DE promise \u6700\u7EC8\u7ED3\u679C\u7684\u51FD\u6570\u3002</p><p>onRejected <strong>\u662F\u5F53 Promise \u53D8\u6210\u62D2\u7EDD\u72B6\u6001\uFF08rejected\uFF09\u65F6\u8C03\u7528\u7684\u51FD\u6570</strong>\u3002\u8BE5\u51FD\u6570\u6709\u4E00\u4E2A\u53C2\u6570\uFF0C\u5373\u62D2\u7EDD\u7684\u539F\u56E0\u3002 \u5982\u679C\u8BE5\u53C2\u6570\u4E0D\u662F\u51FD\u6570\uFF0C\u5219\u4F1A\u5728\u5185\u90E8\u88AB\u66FF\u6362\u4E3A\u4E00\u4E2A &quot;Thrower&quot; \u51FD\u6570\u3002</p></div><ul><li>then \u65B9\u6CD5\u53EF\u4EE5\u8C03\u7528\u591A\u6B21\uFF0C\u53EA\u8981 Promise \u5BF9\u8C61\u6267\u884C\u4E86 resolve\uFF0C\u6240\u6709\u7684 then \u65B9\u6CD5\u90FD\u4F1A\u8C03\u7528</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return 123</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return 123</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return 123</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>then \u65B9\u6CD5\u53EF\u4EE5\u94FE\u5F0F\u8C03\u7528\u5E76\u4E14 then \u65B9\u6CD5\u4E2D\u7684\u56DE\u8C03\u51FD\u6570\u53EF\u4EE5\u6709\u8FD4\u56DE\u503C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> res1<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return 123</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6211\u4EEC\u53D1\u73B0\u6700\u540E\u6253\u5370\u7684\u7ED3\u679C\u7ADF\u7136\u662F resolve \u7684\u7ED3\u679C\uFF0C\u6240\u4EE5\u6211\u4EEC\u731C\u6D4B\uFF0C<strong>\u5728\u94FE\u5F0F\u8C03\u7528\u4E2D\uFF0C\u5982\u679C then \u65B9\u6CD5\u7684\u56DE\u8C03\u6709\u8FD4\u56DE\u503C\uFF0C\u90A3\u4E48\u8FD4\u56DE\u503C\u4F1A\u4F5C\u4E3A\u4E0B\u4E00\u6B21 then \u65B9\u6CD5\u56DE\u8C03\u7684\u53C2\u6570\u88AB\u63A5\u6536</strong>\uFF0C\u4E3A\u4E86\u9A8C\u8BC1\u8FD9\u4E2A\u731C\u60F3\u6211\u4EEC\u53EF\u4EE5\u8FD9\u4E48\u505A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> res <span class="token operator">+</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> res1 <span class="token operator">+</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return 12312</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u7ED3\u679C\u8BC1\u5B9E\uFF0C\u6BCF\u4E00\u6B21 return \u7684\u503C\uFF0C\u90FD\u4F1A\u88AB\u4F5C\u4E3A\u4E0B\u4E00\u6B21\u7684\u53C2\u6570\u4F20\u5165\uFF0C\u8FD9\u662F\u4E3A\u4EC0\u4E48\u5462\uFF1F\u4E3A\u4EC0\u4E48 then \u65B9\u6CD5\u53C8\u53EF\u4EE5\u94FE\u5F0F\u8C03\u7528\u5462\uFF1F</p><p>\u8FD9\u662F\u56E0\u4E3A then \u65B9\u6CD5\u4E2D\u7684\u8FD4\u56DE\u503C\u4F1A\u9ED8\u8BA4\u5305\u88F9\u4E00\u5C42 Promise</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u4EF7\u4E8E</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u94FE\u5F0F\u8C03\u7528</span>
promise
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u4EF7\u4E8E</span>

<span class="token keyword">const</span> promise1 <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>\u65E2\u7136\u662F\u8FD9\u6837\uFF0C\u6211\u4EEC\u4E5F\u5C31\u5E94\u8BE5\u77E5\u9053\u4E86\uFF0Creturn \u7684\u503C\u4E0D\u540C\uFF0C\u94FE\u5F0F\u8C03\u7528\u7684\u7ED3\u679C\u5C31\u4E0D\u540C\uFF0C<strong>\u6BD4\u5982 return \u4E00\u4E2A Promise \u5BF9\u8C61</strong>\u6216\u8005<strong>return \u4E00\u4E2A thenable \u5BF9\u8C61</strong>\uFF0C\u4E0B\u4E00\u6B21 then \u5C31\u4F1A\u7B49\u5F85\u5B83\u4EEC\u7684\u7ED3\u679C\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u548C Promise \u7684\u6267\u884C\u5176\u5B9E\u662F\u4E00\u6837\u7684\u3002</p><h2 id="\u5BF9\u8C61\u65B9\u6CD5-catch" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u65B9\u6CD5-catch" aria-hidden="true">#</a> \u5BF9\u8C61\u65B9\u6CD5 catch</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>catch() \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A Promise\uFF0C<strong>\u5728 Promise \u88AB\u62D2\u7EDD\u4E4B\u540E\uFF0C\u6267\u884C\u76F8\u5E94\u7684\u56DE\u8C03</strong>\u3002\u5B83\u7684\u884C\u4E3A\u4E0E\u8C03\u7528 Promise.prototype.then(undefined, onRejected) \u76F8\u540C\u3002</p><p>\u53C2\u6570\uFF1AonRejected</p><p>\u5F53 Promise \u88AB\u62D2\u7EDD\u65F6\uFF0C\u88AB\u8C03\u7528\u7684\u4E00\u4E2A Function\u3002 \u8BE5\u51FD\u6570\u62E5\u6709\u4E00\u4E2A\u53C2\u6570<code>reason</code>\u6765\u8868\u793A Promise \u88AB\u62D2\u7EDD\u7684\u539F\u56E0\u3002<strong>\u5982\u679C onRejected \u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u6216\u8FD4\u56DE\u4E00\u4E2A\u672C\u8EAB\u5931\u8D25\u7684 Promise\uFF0C\u901A\u8FC7 catch() \u8FD4\u56DE\u7684 Promise \u88AB rejected\uFF1B\u5426\u5219\uFF0C\u5B83\u5C06\u663E\u793A\u4E3A\u6210\u529F\uFF08resolved\uFF09</strong>\uFF0C\u8FD9\u4E5F\u5C31\u610F\u5473\u7740\uFF0C\u5982\u679C\u5728 onRejected \u4E2D\u7EE7\u7EED\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\uFF0C\u53EF\u4EE5\u5728\u540E\u7EED\u7EE7\u7EED\u4F7F\u7528 catch()\u94FE\u5F0F\u8C03\u7528\u8FDB\u884C\u6355\u83B7\u3002</p></div><ul><li>\u9664\u4E86\u6267\u884C Promise \u7684 reject\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u901A\u8FC7\u629B\u51FA\u5F02\u5E38\u6765\u8FDB\u5165 catch \u56DE\u8C03</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">123</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return Error: 123</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6211\u4EEC\u4E5F\u53EF\u4EE5\u8FD9\u6837\u6355\u83B7</span>
promise
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">123</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="\u5BF9\u8C61\u65B9\u6CD5-finally" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u65B9\u6CD5-finally" aria-hidden="true">#</a> \u5BF9\u8C61\u65B9\u6CD5 finally</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>finally() \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A Promise\u3002<strong>\u5728 promise \u7ED3\u675F\u65F6\uFF0C\u65E0\u8BBA\u7ED3\u679C\u662F fulfilled \u6216\u8005\u662F rejected\uFF0C\u90FD\u4F1A\u6267\u884C\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570</strong>\u3002\u8FD9\u4E3A\u5728 Promise \u662F\u5426\u6210\u529F\u5B8C\u6210\u540E\u90FD\u9700\u8981\u6267\u884C\u7684\u4EE3\u7801\u63D0\u4F9B\u4E86\u4E00\u79CD\u65B9\u5F0F\u3002 \u8FD9\u907F\u514D\u4E86\u540C\u6837\u7684\u8BED\u53E5\u9700\u8981\u5728 then()\u548C catch()\u4E2D\u5404\u5199\u4E00\u6B21\u7684\u60C5\u51B5\u3002</p><p>\u53C2\u6570\uFF1AonFinally -&gt; <strong>Promise \u7ED3\u675F\u540E\u8C03\u7528\u7684 Function</strong>\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// return 123 -&gt; end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u9759\u6001\u65B9\u6CD5-resolve-reject" tabindex="-1"><a class="header-anchor" href="#\u9759\u6001\u65B9\u6CD5-resolve-reject" aria-hidden="true">#</a> \u9759\u6001\u65B9\u6CD5 resolve/reject</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Promise.resolve(value)\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u4EE5\u7ED9\u5B9A\u503C\u89E3\u6790\u540E\u7684 Promise \u5BF9\u8C61\u3002\u5982\u679C\u8FD9\u4E2A\u503C\u662F\u4E00\u4E2A promise \uFF0C\u90A3\u4E48\u5C06\u8FD4\u56DE\u8FD9\u4E2A promise \uFF1B\u5982\u679C\u8FD9\u4E2A\u503C\u662F thenable\uFF08\u5373\u5E26\u6709&quot;then&quot; \u65B9\u6CD5\uFF09\uFF0C\u8FD4\u56DE\u7684 promise \u4F1A\u201C\u8DDF\u968F\u201D\u8FD9\u4E2A thenable \u7684\u5BF9\u8C61\uFF0C\u91C7\u7528\u5B83\u7684\u6700\u7EC8\u72B6\u6001\uFF1B\u5426\u5219\u8FD4\u56DE\u7684 promise \u5C06\u4EE5\u6B64\u503C\u5B8C\u6210\u3002\u6B64\u51FD\u6570\u5C06\u7C7B promise \u5BF9\u8C61\u7684\u591A\u5C42\u5D4C\u5957\u5C55\u5E73\u3002</p><p>Promise.reject(reason)\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5E26\u6709\u62D2\u7EDD\u539F\u56E0\u7684 Promise \u5BF9\u8C61\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise {&lt;fulfilled&gt;: 123}</span>

<span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>promise<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Promise {&lt;fulfilled&gt;: &#39;123&#39;}</span>

<span class="token keyword">const</span> thenable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">456</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>thenable<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Promise {&lt;pending&gt;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u8BC1\u660E\u4E86\uFF0CPromise.resolve()\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u89E3\u6790\u8FC7\u7684 Promise \u5BF9\u8C61\u3002</p><p>\u5982\u679C\u6211\u4EEC\u6267\u884C.then \u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return 123</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>promise<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return &#39;123&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> thenable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">456</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>thenable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return 456</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C<code>Promise.resolve()</code> \u770B\u4F3C\u662F\u548C <code>new Promise(resolve =&gt; resolve())</code>\u4E00\u6837\u7684\uFF0C\u4F46\u662F\u5B83\u4EEC\u771F\u7684\u4E00\u6837\u5417\uFF1F\u6211\u4EEC\u6765\u6253\u5370\u4E00\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>promise<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>promise<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise {&lt;fulfilled&gt;: 123}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>promise1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise {&lt;pending&gt;}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>promise<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise {&lt;fulfilled&gt;: 123}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u6211\u4EEC\u53D1\u73B0\uFF0C\u5F53\u4F20\u5165<strong>\u53E6\u4E00\u4E2A Promise \u4F5C\u4E3A\u53C2\u6570\u65F6</strong>\uFF0C\u5B83\u4EEC\u4E24\u4E2A\u7684\u7ED3\u679C\u662F\u4E0D\u4E00\u6837\u7684\uFF0C\u8FD9\u662F\u4E3A\u4EC0\u4E48\u5462\uFF1F\u6211\u4EEC\u4E4B\u524D\u8BF4\u8FC7\uFF0C\u5982\u679C<strong>new Promise(resolve =&gt; resolve())\u7684\u53C2\u6570\u662F\u4E00\u4E2A Promise \u7684\u65F6\u5019\uFF0C\u5B83\u4F1A\u7B49\u5F85\u4F20\u5165\u7684 Promise \u7684\u7ED3\u679C\u4F5C\u4E3A resolve \u7684\u53C2\u6570</strong>\uFF0C\u56E0\u4E3A\u91CC\u9762\u7684 Promise \u662F\u4E00\u4E2A<strong>\u5FAE\u4EFB\u52A1</strong>\uFF0C\u5728\u4EE3\u7801\u7B2C\u4E00\u6B21\u6267\u884C\u65F6\u8FD8\u6CA1\u6709\u7ED3\u679C\uFF0C\u56E0\u6B64\u6253\u5370\u51FA\u7684\u5C31\u662F\u4E00\u4E2A<code>pending</code>\u72B6\u6001\u7684 Promise \u5BF9\u8C61\uFF0C\u800C Promise.resolve \u4F20\u5165\u4E00\u4E2A Promise \u7684\u65F6\u5019\uFF0C<strong>\u90A3\u4E48\u5C06\u539F\u5C01\u4E0D\u52A8\u7684\u8FD4\u56DE\u8FD9\u4E2A promise</strong>\u3002 \u8FD9\u4E5F\u5C31\u662F\u5B83\u4EEC\u76F4\u63A5\u7684\u533A\u522B\u3002</p><h2 id="\u9759\u6001\u65B9\u6CD5-all" tabindex="-1"><a class="header-anchor" href="#\u9759\u6001\u65B9\u6CD5-all" aria-hidden="true">#</a> \u9759\u6001\u65B9\u6CD5 all</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Promise.all() \u65B9\u6CD5\u63A5\u6536\u4E00\u4E2A <code>promise \u7684 iterable \u7C7B\u578B</code>\uFF08\u6CE8\uFF1AArray\uFF0CMap\uFF0CSet \u90FD\u5C5E\u4E8E ES6 \u7684 iterable \u7C7B\u578B\uFF09\u7684\u8F93\u5165\uFF0C\u5E76\u4E14\u53EA\u8FD4\u56DE\u4E00\u4E2A Promise \u5B9E\u4F8B\uFF0C \u90A3\u4E2A\u8F93\u5165\u7684\u6240\u6709 promise \u7684 resolve \u56DE\u8C03\u7684\u7ED3\u679C\u662F\u4E00\u4E2A\u6570\u7EC4\u3002\u8FD9\u4E2A Promise \u7684 resolve <strong>\u56DE\u8C03\u6267\u884C\u662F\u5728\u6240\u6709\u8F93\u5165\u7684 promise \u7684 resolve \u56DE\u8C03\u90FD\u7ED3\u675F</strong>\uFF0C<strong>\u6216\u8005\u8F93\u5165\u7684 iterable \u91CC\u6CA1\u6709 promise \u4E86\u7684\u65F6\u5019</strong>\u3002\u5B83\u7684 reject \u56DE\u8C03\u6267\u884C\u662F\uFF0C<strong>\u53EA\u8981\u4EFB\u4F55\u4E00\u4E2A\u8F93\u5165\u7684 promise \u7684 reject \u56DE\u8C03\u6267\u884C\u6216\u8005\u8F93\u5165\u4E0D\u5408\u6CD5\u7684 promise \u5C31\u4F1A\u7ACB\u5373\u629B\u51FA\u9519\u8BEF</strong>\uFF0C\u5E76\u4E14 reject \u7684\u662F\u7B2C\u4E00\u4E2A\u629B\u51FA\u7684\u9519\u8BEF\u4FE1\u606F\u3002</p></div><p>\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p<span class="token punctuation">,</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5EF6\u65F62s\u540E\u8FD4\u56DE\u6240\u6709Promise\u7684\u7ED3\u679C[1,2,3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u5982\u679C\u4F20\u5165\u7684 Promise \u6709 reject\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p<span class="token punctuation">,</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// return 1\uFF0C\u6355\u83B7\u5230reject\u540E\u7ED3\u675F\u6267\u884C\uFF0C\u5373\u4F7F\u540E\u8FB9\u6709resolve\u7684\u7ED3\u679C\uFF0C\u53EA\u4F1A\u8FD4\u56DE\u7B2C\u4E00\u6B21reject\u7684\u7ED3\u679C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="\u9759\u6001\u65B9\u6CD5-race" tabindex="-1"><a class="header-anchor" href="#\u9759\u6001\u65B9\u6CD5-race" aria-hidden="true">#</a> \u9759\u6001\u65B9\u6CD5 race</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Promise.race(iterable) \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A promise\uFF0C\u4E00\u65E6\u8FED\u4EE3\u5668\u4E2D\u7684<strong>\u67D0\u4E2A promise \u89E3\u51B3\u6216\u62D2\u7EDD</strong>\uFF0C\u8FD4\u56DE\u7684 promise \u5C31\u4F1A\u89E3\u51B3\u6216\u62D2\u7EDD\u3002</p><p>\u610F\u5473\u7740\u4E00\u65E6\u6709\u4E00\u4E2A\u7ED3\u679C\u65E0\u8BBA\u662F resolve \u8FD8\u662F reject \u90FD\u4F1A\u7ED3\u675F\u6267\u884C\u540E\u7EED\u7684\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p<span class="token punctuation">,</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// return 1, \u6355\u83B7\u5230\u4E86\u7B2C\u4E00\u4E2Aresolve, \u5C31\u4E0D\u518D\u6267\u884C\u4E86\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="\u9759\u6001\u65B9\u6CD5-any" tabindex="-1"><a class="header-anchor" href="#\u9759\u6001\u65B9\u6CD5-any" aria-hidden="true">#</a> \u9759\u6001\u65B9\u6CD5 any</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Promise.any() \u63A5\u6536\u4E00\u4E2A <code>Promise \u53EF\u8FED\u4EE3\u5BF9\u8C61</code>\uFF0C\u53EA\u8981<strong>\u5176\u4E2D\u7684\u4E00\u4E2A promise \u6210\u529F</strong>\uFF0C\u5C31\u8FD4\u56DE\u90A3\u4E2A\u5DF2\u7ECF\u6210\u529F\u7684 promise \u3002\u5982\u679C\u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E2D<strong>\u6CA1\u6709\u4E00\u4E2A promise \u6210\u529F</strong>\uFF08\u5373\u6240\u6709\u7684 promises \u90FD\u5931\u8D25/\u62D2\u7EDD\uFF09\uFF0C\u5C31\u8FD4\u56DE\u4E00\u4E2A\u5931\u8D25\u7684 promise\u3002</p></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Promise.any()\u662F\u4E00\u4E2A\u5B9E\u9A8C\u7684\u65B0\u7279\u6027\uFF0C\u5E76\u4E0D\u662F\u6240\u6709\u6D4F\u89C8\u5668\u517C\u5BB9\u3002</p></div><p>\u6210\u529F\u6001\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p<span class="token punctuation">,</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// return 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u62D2\u7EDD\u6001\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p<span class="token punctuation">,</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// return AggregateError: All promises were rejected</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="\u9759\u6001\u65B9\u6CD5-allsettled" tabindex="-1"><a class="header-anchor" href="#\u9759\u6001\u65B9\u6CD5-allsettled" aria-hidden="true">#</a> \u9759\u6001\u65B9\u6CD5 allSettled</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u8BE5 Promise.allSettled()\u65B9\u6CD5\u8FD4\u56DE<strong>\u4E00\u4E2A\u5728\u6240\u6709\u7ED9\u5B9A\u7684 promise \u90FD\u5DF2\u7ECF fulfilled \u6216 rejected \u540E\u7684 promise</strong>\uFF0C\u5E76\u5E26\u6709\u4E00\u4E2A\u5BF9\u8C61\u6570\u7EC4\uFF0C\u6BCF\u4E2A\u5BF9\u8C61\u8868\u793A\u5BF9\u5E94\u7684 promise \u7ED3\u679C\u3002</p><p>\u6BCF\u4E2A\u5BF9\u8C61\u4E2D\u6709\u4E24\u4E2A key\uFF0C\u5982\u679C\u662F resolve \u7ED3\u679C\u5C31\u662F<code>status</code>\uFF0C<code>value</code>\uFF0C\u5982\u679C reject \u7ED3\u679C\u5C31\u662F<code>status</code>\uFF0C<code>reason</code></p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p<span class="token punctuation">,</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* return
[
  { status: &#39;fulfilled&#39;, value: 1 },
  { status: &#39;rejected&#39;, reason: 2 },
  { status: &#39;rejected&#39;, reason: 3 }
]
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,68);function _(x,q){const a=o("ExternalLinkIcon");return c(),l(u,null,[i,n("p",null,[k,n("a",m,[b,p(a)])]),n("p",null,[d,n("a",g,[v,p(a)])]),f,n("p",null,[h,n("a",j,[P,p(a)]),w]),y],64)}var I=e(r,[["render",_],["__file","8.Promise.html.vue"]]);export{I as default};
