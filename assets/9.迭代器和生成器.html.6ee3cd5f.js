import{_ as p,r as t,o as e,a as o,b as n,e as c,F as l,c as s,d as u}from"./app.1c4ce4b7.js";const r={},i=s('<h1 id="\u8FED\u4EE3\u5668\u548C\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668\u548C\u751F\u6210\u5668" aria-hidden="true">#</a> \u8FED\u4EE3\u5668\u548C\u751F\u6210\u5668</h1><h2 id="\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u8FED\u4EE3\u5668</h2><h3 id="\u8FED\u4EE3\u5668\u548C\u53EF\u8FED\u4EE3\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668\u548C\u53EF\u8FED\u4EE3\u5BF9\u8C61" aria-hidden="true">#</a> \u8FED\u4EE3\u5668\u548C\u53EF\u8FED\u4EE3\u5BF9\u8C61</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><strong>\u8FED\u4EE3\u5668</strong>\uFF1A\u5728\u5BB9\u5668\u5BF9\u8C61\uFF08container\uFF0C\u4F8B\u5982\u94FE\u8868\u6216\u6570\u7EC4\uFF09\u4E0A\u904D\u8BBF\u7684\u63A5\u53E3\uFF0C\u8BBE\u8BA1\u4EBA\u5458\u65E0\u9700\u5173\u5FC3\u5BB9\u5668\u5BF9\u8C61\u7684\u5185\u5B58\u5206\u914D\u7684\u5B9E\u73B0\u7EC6\u8282\u3002</p></div><p>\u4ECE\u8FED\u4EE3\u5668\u7684\u5B9A\u4E49\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA\u6765\uFF0C\u8FED\u4EE3\u5668\u662F\u5E2E\u52A9\u6211\u4EEC\u5BF9\u67D0\u4E2A\u6570\u636E\u7ED3\u6784\u8FDB\u884C\u904D\u5386\u7684\u5BF9\u8C61\u3002</p><p>\u5728 JavaScript \u4E2D\uFF0C\u8FED\u4EE3\u5668\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E76\u4E14\u8BE5\u5BF9\u8C61\u9700\u8981\u6EE1\u8DB3<code>\u8FED\u4EE3\u5668\u534F\u8BAE\uFF08iterator protocol\uFF09</code>\u3002</p>',6),k={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Iteration_protocols",target:"_blank",rel:"noopener noreferrer"},b=u("MDN \u5BF9\u8FED\u4EE3\u534F\u8BAE\u7684\u4ECB\u7ECD"),d=s(`<p>\u8FED\u4EE3\u5668\u534F\u8BAE\u5B9A\u4E49\u4E86\u4EA7\u751F\u4E00\u7CFB\u5217\u503C\uFF08\u65E0\u8BBA\u662F\u6709\u9650\u8FD8\u662F\u65E0\u9650\u4E2A\uFF09\u7684\u6807\u51C6\u65B9\u5F0F\uFF0C\u800C\u5728 js \u4E2D\u8FD9\u4E2A\u6807\u51C6\u5C31\u662F\u4E00\u4E2A<code>\u7279\u5B9A\u7684 next \u65B9\u6CD5</code>\u3002</p><p><strong>next \u65B9\u6CD5\u6709\u5982\u4E0B\u7684\u8981\u6C42\uFF1A</strong></p><p>\u4E00\u4E2A<code>\u65E0\u53C2\u6570</code>\u6216\u8005<code>\u4E00\u4E2A\u53C2\u6570</code>\u7684\u51FD\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E94\u5F53\u62E5\u6709\u4EE5\u4E0B\u4E24\u4E2A\u5C5E\u6027\u7684\u5BF9\u8C61\uFF1A</p><p><strong>done\uFF08boolean\uFF09</strong></p><p>\u5982\u679C\u8FED\u4EE3\u5668\u53EF\u4EE5\u4EA7\u751F\u5E8F\u5217\u4E2D\u7684\u4E0B\u4E00\u4E2A\u503C\uFF0C\u5219\u4E3A false\u3002\uFF08\u8FD9\u7B49\u4EF7\u4E8E\u6CA1\u6709\u6307\u5B9A done \u8FD9\u4E2A\u5C5E\u6027\u3002\uFF09</p><p>\u5982\u679C\u8FED\u4EE3\u5668\u5DF2\u5C06\u5E8F\u5217\u8FED\u4EE3\u5B8C\u6BD5\uFF0C\u5219\u4E3A true\u3002\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0Cvalue \u662F\u53EF\u9009\u7684\uFF0C\u5982\u679C\u5B83\u4F9D\u7136\u5B58\u5728\uFF0C\u5373\u4E3A\u8FED\u4EE3\u7ED3\u675F\u4E4B\u540E\u7684\u9ED8\u8BA4\u8FD4\u56DE\u503C\u3002</p><p><strong>value</strong></p><p>\u8FED\u4EE3\u5668\u8FD4\u56DE\u7684\u4EFB\u4F55 JavaScript \u503C\u3002done \u4E3A true \u65F6\u53EF\u7701\u7565\u3002</p><p>\u5982\u679C\u8FD4\u56DE\u4E86\u4E00\u4E2A\u975E\u5BF9\u8C61\u503C\uFF08\u6BD4\u5982 false \u6216 undefined\uFF09\uFF0C\u5219\u4F1A\u629B\u51FA\u4E00\u4E2A <strong>TypeError \u5F02\u5E38</strong>\uFF08&quot;iterator.next() returned a non-object value&quot;\uFF09\u3002</p><p>\u5B9E\u9645\u4E0A\uFF0C\u8FED\u4EE3\u5668\u5C31\u662F\u7C7B\u4F3C\u4E00\u4E2A\u8FD9\u6837\u7684\u5BF9\u8C61\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> iterator <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> arr<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 1, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 2, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 3, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 4, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 5, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 6, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u901A\u8FC7\u4E0A\u8FF0\u8FED\u4EE3\u5668\u7684\u7279\u5F81\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C01\u88C5\u4E00\u4E2A\u8FED\u4EE3\u5668\u51FD\u6570\uFF0C\u5F53\u6211\u4EEC\u4F20\u5165\u4E00\u4E2A\u6570\u7EC4\u65F6\uFF0C\u4F1A<strong>\u751F\u6210\u4E00\u4E2A\u8BE5\u6570\u7EC4\u7684\u8FED\u4EE3\u5668</strong>\uFF0C\u8C03\u7528<strong>next \u65B9\u6CD5</strong>\u4F1A\u4F9D\u6B21\u8FD4\u56DE\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createIterator</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> arr<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arr1Iterator <span class="token operator">=</span> <span class="token function">createIterator</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>
arr1Iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arr1Iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arr1Iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;e&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arr2Iterator <span class="token operator">=</span> <span class="token function">createIterator</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>
arr2Iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arr2Iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arr2Iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u901A\u8FC7\u4E0A\u9762\u7684\u5C01\u88C5\uFF0C\u6211\u4EEC\u6BCF\u6B21\u4F20\u5165\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\uFF0C\u5C31\u53EF\u4EE5\u751F\u6210\u4E00\u4E2A\u8BE5\u6570\u7EC4\u7684\u8FED\u4EE3\u5668\uFF0C\u901A\u8FC7\u8C03\u7528\u8FED\u4EE3\u5668\u5185\u90E8\u7684 next \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u5F97\u5230\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u3002</p><p>\u4E0A\u8FF0\u4EE3\u7801\u662F\u4E00\u4E2A<strong>\u6709\u9650</strong>\u7684\u8FED\u4EE3\u5668\uFF0C\u4EC0\u4E48\u53EB\u505A<strong>\u6709\u9650\u7684\u8FED\u4EE3\u5668</strong>\u5462\uFF1F\u5C31\u662F\u901A\u8FC7\u6211\u4EEC\u4E0D\u65AD\u7684\u8C03\u7528 next\uFF0C\u6700\u7EC8 done \u7684\u503C\u4E00\u5B9A\u4F1A\u53D8\u6210<strong>true</strong>\uFF0C\u800C\u8FED\u4EE3\u5668\u662F\u6709<code>\u65E0\u9650\u8FED\u4EE3\u5668</code>\u7684\u6982\u5FF5\u7684\uFF0C\u4EC0\u4E48\u662F\u65E0\u9650\u8FED\u4EE3\u5668\u5462\uFF1F\u5176\u5B9E\u5C31\u662F\u65E0\u8BBA\u8C03\u7528\u591A\u5C11\u6B21 next\uFF0C<strong>done \u7684\u503C\u6C38\u8FDC\u662F false</strong>\u3002\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">infinityIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> index<span class="token operator">++</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> iterator <span class="token operator">=</span> <span class="token function">infinityIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 2</span>
<span class="token operator">...</span>             <span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u867D\u7136\u6211\u4EEC\u8FDB\u884C\u4E86\u5C01\u88C5\uFF0C\u4F46\u611F\u89C9\u8FD8\u662F\u5C11\u4E86\u5C11\u4E86\u70B9\u4E1C\u897F\uFF0C\u5982\u679C\u6211\u4EEC\u60F3\u4F7F\u7528\u8FED\u4EE3\u5668\uFF0C\u6211\u4EEC\u8FD8\u8981\u5148\u521B\u5EFA\u4E00\u4E2A\u53D8\u91CF\uFF0C\u7136\u540E\u518D\u628A\u8FD9\u4E2A\u53D8\u91CF\u4F20\u5165\u6211\u4EEC\u5C01\u88C5\u597D\u7684\u51FD\u6570\u4E2D\uFF0C\u624D\u80FD\u4F7F\u7528\u8FED\u4EE3\u5668\u3002\u771F\u7684\u597D\u9EBB\u70E6...\u90A3\u4E48\u6709\u6CA1\u6709\u66F4\u597D\u7684\u65B9\u6CD5\u5462\uFF1F\u6709\u6CA1\u6709\u53EF\u80FD\u6211\u4EEC\u5728\u521B\u5EFA\u53D8\u91CF\u7684\u540C\u65F6\u81EA\u52A8\u5E2E\u6211\u4EEC\u751F\u6210\u4E86\u8FD9\u4E2A\u53D8\u91CF\u7684\u8FED\u4EE3\u5668\u5462\uFF1F</p><p>\u6CA1\u9519\uFF01</p><p><code>\u53EF\u8FED\u4EE3\u5BF9\u8C61</code>\u5C31\u53EF\u4EE5\u5E2E\u52A9\u6211\u4EEC\u5B9E\u73B0\uFF0C\u4EC0\u4E48\u662F<code>\u53EF\u8FED\u4EE3\u5BF9\u8C61\u5462</code>\uFF1F</p><ul><li><p>\u5B83\u548C\u8FED\u4EE3\u5668\u662F\u4E0D\u540C\u7684\u6982\u5FF5</p></li><li><p>\u5F53\u4E00\u4E2A\u5BF9\u8C61\u5B9E\u73B0\u4E86<code>iterable protocol\u534F\u8BAE</code>\u65F6\uFF0C\u5B83\u5C31\u662F\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61</p></li><li><p>\u8FD9\u4E2A\u5BF9\u8C61\u7684\u8981\u6C42\u662F\u5FC5\u987B\u5B9E\u73B0<code>@@iterator \u65B9\u6CD5</code>\uFF0C\u5728\u4EE3\u7801\u4E2D\u6211\u4EEC\u4F7F\u7528<code>Symbol.iterator</code>\u8BBF\u95EE\u8BE5\u5C5E\u6027</p></li><li><p><code>Symbol.iterator</code>\u65B9\u6CD5\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A<strong>\u8FED\u4EE3\u5668</strong></p></li></ul><p>\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> iterableObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterableObj<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u6B64\u65F6 iterableObj \u5C31\u662F\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u3002</p><ul><li><p>\u5F53\u6211\u4EEC<strong>\u6267\u884C iterableObj[Symbol.iterator]</strong>\uFF0C\u5C31\u4F1A\u5F97\u5230\u4E00\u4E2A<code>\u8FED\u4EE3\u5668</code>\u3002</p></li><li><p>\u5F97\u5230\u8FED\u4EE3\u5668\u4E4B\u540E\u6211\u4EEC\u53EF\u4EE5\u8C03\u7528\u8FED\u4EE3\u5668\u5185\u90E8\u7684 next \u65B9\u6CD5\u3002</p></li><li><p>\u6BCF\u6B21\u8C03\u7528 iterableObj[Symbol.iterator]\u90FD\u4F1A\u751F\u6210\u4E00\u4E2A<strong>\u65B0\u7684\u8FED\u4EE3\u5668</strong>\u3002</p></li></ul><p>\u5F88\u591A\u4EBA\u90FD\u7528\u8FC7 JavaScript \u7684<code>for...of</code>\u65B9\u6CD5\uFF0C\u5BF9\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61\u6211\u4EEC\u662F\u5426\u53EF\u4EE5\u4F7F\u7528\u5B83\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;lee&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//  TypeError: obj is not iterable</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6211\u4EEC\u53D1\u73B0\uFF0C\u7CFB\u7EDF\u7ED9\u6211\u4EEC\u62A5\u9519\uFF0C\u8BF4 obj<strong>\u4E0D\u662F\u4E00\u4E2A iterable</strong>\uFF0C\u8FD9\u5C31\u8BF4\u660E\uFF0C<code>for...of</code>\u53EA\u80FD\u904D\u5386<strong>\u53EF\u8FED\u4EE3\u5BF9\u8C61</strong>\u3002</p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u628A\u6211\u4EEC\u81EA\u5DF1\u751F\u6210\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61\u4F7F\u7528 for...of</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> iterableObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> iterableObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//  1 2 3 4 5</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u6211\u4EEC\u53D1\u73B0\uFF0C\u5F53\u4F20\u5165\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u65F6\uFF0C\u5B83\u5C31\u4E0D\u4F1A\u62A5\u9519\u4E86\u3002\u5176\u5B9E<code>for...of</code>\u7684\u539F\u7406\u5C31\u662F\u5229\u7528<code>\u8FED\u4EE3\u5668</code>\u3002\u4E0D\u65AD\u8C03\u7528 next \u65B9\u6CD5\u8FDB\u884C\u904D\u5386\u3002\u901A\u8FC7\u5224\u65AD<strong>done \u7684\u503C\u662F true \u65F6</strong>\u505C\u6B62\u8C03\u7528 next \u51FD\u6570\u3002</p><p>\u90A3\u4E48\u5728 JavaScript \u4E2D\uFF0C\u6709\u54EA\u4E9B\u53EF\u8FED\u4EE3\u5BF9\u8C61\u5462\uFF1F</p><p>\u6BD4\u5982\uFF1A<code>Strig</code>\u3001<code>Array</code>\uFF0C<code>Map</code>\uFF0C<code>Set</code>\uFF0C<code>arguments\u5BF9\u8C61</code>\u3001<code>NodeLit\u96C6\u5408</code>\u3002\u8FD9\u4E9B\u90FD\u4F1A\u751F\u6210\u4E00\u4E2A\u8FED\u4EE3\u5668\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&quot;lee&quot;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u0192 [Symbol.iterator]() { [native code] }</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// l e e</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u8FED\u4EE3\u5668\u4EE5\u53CA\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668\u4EE5\u53CA\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> \u8FED\u4EE3\u5668\u4EE5\u53CA\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5E94\u7528\u573A\u666F</h3><p>\u5728 JavaScript \u4E2D\uFF0C<code>for...of</code>\u3001<code>\u5C55\u5F00\u8FD0\u7B97\u7B26</code>\u3001<code>\u5BF9\u8C61\u89E3\u6784</code>\u7B49\u539F\u7406\u90FD\u662F\u901A\u8FC7\u8FED\u4EE3\u5668\u5B8C\u6210\u7684\u3002\u4F46\u662F\u6211\u4EEC\u4F1A\u6709\u4E00\u4E2A\u7591\u95EE\uFF0C\u5BF9\u8C61\u4E0D\u662F\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u4F46\u662F\u5C55\u5F00\u8FD0\u7B97\u7B26\u548C\u89E3\u6784\u666E\u901A\u5BF9\u8C61\u4E0D\u662F\u4E5F\u53EF\u4EE5\u5417\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;lee&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TypeError: Found non-callable @@iterator</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1 2 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u53D1\u73B0\uFF0C\u5982\u679C\u5BF9\u6570\u7EC4\u8FDB\u884C<code>\u5C55\u5F00\u8FD0\u7B97\u7B26</code>\u64CD\u4F5C\u5E76\u4E14\u6253\u5370\u65F6\uFF0C\u662F\u53EF\u4EE5\u6253\u5370\u51FA\u5185\u5BB9\u7684\uFF0C\u800C\u5BF9\u5BF9\u8C61\u6253\u5370\u65F6\u5374\u62A5\u9519\uFF0C\u544A\u8BC9\u6211\u4EEC\u8BE5\u5BF9\u8C61<strong>\u4E0D\u662F\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61</strong>\u3002</p><p>\u5176\u5B9E<strong>\u666E\u901A\u5BF9\u8C61</strong>\u4E4B\u6240\u4EE5\u53EF\u4EE5\u4F7F\u7528<code>\u5C55\u5F00\u8FD0\u7B97\u7B26</code>\u548C<code>\u89E3\u6784</code>\uFF0C\u662F\u56E0\u4E3A\u5728<code>ES9</code>\u4E2D\uFF0C<code>ECMA\u6807\u51C6</code>\u4E13\u95E8\u4E3A\u5BF9\u8C61\u5B9E\u73B0\u7684\u4E00\u79CD\u7B80\u5355\u64CD\u4F5C\u7684<strong>\u8BED\u6CD5\u7CD6</strong>\uFF0C\u4F46\u5B83\u5B9E\u73B0\u7684\u539F\u7406<strong>\u5E76\u4E0D\u662F\u8FED\u4EE3\u5668</strong>\u3002</p><p>\u5982\u679C\u6211\u4E48\u7528<code>\u7C7B</code>\u6765\u521B\u5EFA\u4E00\u4E2A<code>\u5BF9\u8C61</code>\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u5BF9\u8C61\u662F\u4E0D\u662F\u53EF\u8FED\u4EE3\u5BF9\u8C61\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;lee&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TypeError: p is not iterable</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u6CA1\u60F3\u5230\u7ADF\u7136\u62A5\u9519\u4E86\uFF0C\u5B83\u8BF4\u6211\u4EEC\u7684 p \u5BF9\u8C61\u4E0D\u662F\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61...</p><p>\u5982\u4F55\u624D\u80FD\u8BA9\u5B83\u6210\u4E3A\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u5462\uFF1F\u5982\u679C\u6211\u4EEC\u7ED9\u8FD9\u4E2A\u5BF9\u8C61\u52A0\u4E0A\u4E00\u4E2A<code>[Symbol.iterator]</code>\u65B9\u6CD5\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;lee&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// l e e</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u6211\u4EEC\u53D1\u73B0\uFF0C\u5F53\u6211\u4EEC\u7ED9\u751F\u4EA7\u7684\u5BF9\u8C61<strong>\u624B\u52A8\u6DFB\u52A0</strong><code>Symbol.iterator</code>\u65B9\u6CD5\u65F6\uFF0C\u6211\u4EEC\u7528<strong>\u7C7B\u751F\u4EA7\u7684\u5BF9\u8C61\u5C31\u4F1A\u6210\u4E3A\u53EF\u8FED\u4EE3\u5BF9\u8C61</strong>\u4E86\u3002\u5F53\u7136\uFF0C\u6211\u4EEC\u4E3A\u4E86\u65B9\u4FBF\u7684\u8BDD\u53EF\u4EE5\u76F4\u63A5\u5728\u7C7B\u4E2D\u6DFB\u52A0\u9759\u6001\u65B9\u6CD5\uFF0C\u8FD9\u6837\u6211\u4EEC<strong>\u6BCF\u6B21\u751F\u6210</strong>\u7684\u5BF9\u8C61<strong>\u90FD\u53EF\u4EE5\u4F5C\u4E3A\u53EF\u8FED\u4EE3\u5BF9\u8C61</strong>\u3002\u7C7B\u4F3C\u8FD9\u6837\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;lee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// l e e</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> p1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// t e s t</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>break</code>\u5173\u952E\u8BCD\u53EF\u4EE5\u5E2E\u52A9\u6211\u4EEC\u63D0\u524D<strong>\u7EC8\u6B62</strong>\u8FED\u4EE3\u5668\uFF0C\u53EA\u9700\u8981\u5728\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684<code>[Symbol.iterator]</code>\u65B9\u6CD5\u4E2D\u8FD4\u56DE\u4E00\u4E2A<code>return\u65B9\u6CD5</code>\uFF0C\u5728\u8BE5\u65B9\u6CD5\u4E2D\u6211\u4EEC\u5C31\u53EF\u4EE5\u76D1\u542C\u8FED\u4EE3\u5668\u7684\u7EC8\u6B62\u3002\u8BE5\u65B9\u6CD5\u8981\u6C42\u6211\u4EEC<strong>\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61</strong>\u3002</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> iterableObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">return</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u76D1\u542C\u5230\u4E86\u8FED\u4EE3\u5668\u7684\u7EC8\u6B62&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> iterableObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6253\u5370\u51FA&#39;\u6211\u76D1\u542C\u5230\u4E86\u8FED\u4EE3\u5668\u7684\u7EC8\u6B62&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668" aria-hidden="true">#</a> \u751F\u6210\u5668</h2><h3 id="\u751F\u6210\u5668\u548C\u751F\u6210\u5668\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u548C\u751F\u6210\u5668\u51FD\u6570" aria-hidden="true">#</a> \u751F\u6210\u5668\u548C\u751F\u6210\u5668\u51FD\u6570</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li><code>\u751F\u6210\u5668</code>\u662F\u7531<code>\u751F\u6210\u5668\u51FD\u6570</code>\u4EA7\u751F\u7684\u3002</li><li><code>\u751F\u6210\u5668</code>\u662F\u4E00\u79CD\u7279\u6B8A\u7684<code>\u8FED\u4EE3\u5668</code>\u3002</li><li><code>\u751F\u6210\u5668</code>\u4E3B\u8981\u8FD0\u7528\u4E8E\u51FD\u6570\uFF0C\u662F ES6 \u4E2D\u65B0\u589E\u7684\u4E00\u79CD<strong>\u51FD\u6570\u63A7\u5236</strong>\u7684\u65B9\u6848\uFF0C\u5B83\u80FD\u591F\u4F7F\u6211\u4EEC\u7075\u6D3B\u7684\u63A7\u5236<strong>\u51FD\u6570\u6682\u505C\u6267\u884C\u4EE5\u53CA\u7EE7\u7EED\u6267\u884C</strong>\u3002</li></ul></div><p>\u90A3\u4E48\u4EC0\u4E48\u662F\u751F\u6210\u5668\u51FD\u6570\u5462\uFF1F</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li><code>\u751F\u6210\u5668\u51FD\u6570</code>\u7684\u58F0\u660E\u65B9\u5F0F\u548C<code>\u666E\u901A\u51FD\u6570</code>\u5DEE\u4E0D\u591A\uFF0C\u4F46\u662F\u9700\u8981\u5728<code>function</code>\u5173\u952E\u8BCD\u540E\u52A0\u4E00\u4E2A<code>*</code>\u53F7\u3002</li><li><code>\u751F\u6210\u5668\u51FD\u6570</code>\u53EF\u4EE5\u901A\u8FC7<code>yield</code>\u5173\u952E\u5B57\u6765\u63A7\u5236\u51FD\u6570\u7684\u6267\u884C\u6D41\u7A0B\u3002</li><li><code>\u751F\u6210\u5668\u51FD\u6570</code>\u8C03\u7528\u65F6\u5E76\u4E0D\u4F1A<strong>\u6267\u884C\u51FD\u6570</strong>\uFF0C\u5B83\u7684\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A<code>\u751F\u6210\u5668\uFF08Generator\uFF09</code>\u3002</li><li><code>\u751F\u6210\u5668\u51FD\u6570</code>\u8C03\u7528\u65E2\u7136\u8FD4\u56DE\u7684\u662F<code>\u751F\u6210\u5668</code>\uFF0C\u800C<code>\u751F\u6210\u5668</code>\u53C8\u662F\u4E00\u79CD\u7279\u6B8A\u7684<code>\u8FED\u4EE3\u5668</code>\uFF0C\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7<code>next</code>\u5173\u952E\u5B57\u6765\u8C03\u7528<code>\u751F\u6210\u5668\u51FD\u6570</code></li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// generatorFun {&lt;suspended&gt;}</span>
fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3 4 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u4ECE\u4E0A\u9762\u7684<code>\u751F\u6210\u5668\u51FD\u6570</code>\u4E2D\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA\uFF0C\u6BCF\u6B21\u8C03\u7528<code>next</code>\uFF0C\u90FD\u4F1A\u5339\u914D\u4E0B\u4E00\u4E2A<code>yield</code>\u4E4B\u524D\u7684\u4EE3\u7801\u3002</p><p>\u65E2\u7136\u6211\u4EEC\u8BF4<code>\u751F\u6210\u5668</code>\u662F\u4E00\u79CD\u7279\u6B8A\u7684<code>\u8FED\u4EE3\u5668</code>\uFF0C\u90A3\u4E48\u8C03\u7528<code>next</code>\u7684\u65F6\u5019\u4F1A\u6709\u8FD4\u56DE\u503C\u5417\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: undefined, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: undefined, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6211\u4EEC\u53D1\u73B0\uFF0C\u786E\u5B9E\u8C03\u7528<code>next</code>\u7684\u65F6\u5019\u4E5F\u6709\u8FD4\u56DE\u503C\uFF0C\u5E76\u4E14\u683C\u5F0F\u548C\u6211\u4EEC\u8C03\u7528<code>\u751F\u6210\u5668</code>\u65F6\u4E00\u6837\uFF0C\u53EA\u662F\u56E0\u4E3A\u6211\u4EEC\u6CA1\u6709\u7ED9\u5B83\u8FD4\u56DE\u503C\uFF0C\u6240\u4EE5\u8FD4\u56DE\u7684\u5168\u662F<code>undefined</code>\uFF0C\u90A3\u4E48\u6211\u4EEC\u5982\u4F55\u6765\u63A7\u5236\u5B83\u7684\u8FD4\u56DE\u503C\u5462\uFF1F\u5982\u679C\u76F4\u63A5\u624B\u52A8 return \u4E00\u4E2A\u503C\u4F1A\u600E\u6837\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 1, done: true}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: undefined, done: true}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u6211\u4EEC\u53D1\u73B0\uFF0C\u4E8B\u60C5\u597D\u50CF\u4E0D\u592A\u5BF9\u554A...</p><p>\u7B2C\u4E00\u6B21<code>next</code>\u7684\u65F6\u5019\uFF0C\u867D\u7136\u6709\u4E86\u8FD4\u56DE\u503C\uFF0C\u4F46\u662F<code>done</code>\u5374\u53D8\u6210\u4E86<strong>true</strong></p><p>\u7B2C\u4E8C\u6B21<code>next</code>\u7684\u65F6\u5019\uFF0C\u867D\u7136\u6211\u4EEC\u7ED9\u4E86\u8FD4\u56DE\u503C\uFF0C\u4F46\u662F\u5374\u6CA1\u6709\u7ED9\u6211\u4EEC\u8FD4\u56DE\uFF0C\u5E76\u4E14<code>done</code>\u4E5F\u53D8\u6210\u4E86<strong>true</strong></p><p>\u5176\u5B9E\u8FD9\u662F\u56E0\u4E3A\uFF0C\u5F53\u6211\u4EEC\u5728<code>\u751F\u6210\u5668\u51FD\u6570</code>\u5185\u8C03\u7528<code>return</code>\u5173\u952E\u5B57\u7684\u65F6\u5019\uFF0C\u76F8\u5F53\u4E8E\u6211\u4EEC\u624B\u52A8<strong>\u7EC8\u6B62\u4E86\u751F\u6210\u5668</strong>\uFF0C\u4E4B\u540E\u8C03\u7528<code>next</code>\u7684\u8FD4\u56DE\u503C\u5C31\u90FD\u4F1A\u8FD9\u6837\u4E86\u3002</p><p>\u90A3\u4E48\u6211\u4EEC\u8BE5\u5982\u4F55\u5728<code>\u751F\u6210\u5668\u51FD\u6570</code>\u4E2D\u6DFB\u52A0\u8FD4\u56DE\u503C\u5462\uFF1F\u5176\u5B9E\u5F88\u7B80\u5355\uFF0C\u53EA\u9700\u8981\u5728<code>yield</code>\u5173\u952E\u5B57\u540E\u9762\u5199\u4E0A\u6211\u4EEC\u7684\u8FD4\u56DE\u503C\u5C31\u53EF\u4EE5\u4E86\uFF0C\u7C7B\u4F3C\u4E0B\u9762\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 1, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 2, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="\u751F\u6210\u5668\u7684\u5176\u4ED6\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u7684\u5176\u4ED6\u7528\u6CD5" aria-hidden="true">#</a> \u751F\u6210\u5668\u7684\u5176\u4ED6\u7528\u6CD5</h3><h4 id="\u751F\u6210\u5668\u7684\u4F20\u53C2" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u7684\u4F20\u53C2" aria-hidden="true">#</a> \u751F\u6210\u5668\u7684\u4F20\u53C2</h4><p>\u6211\u4EEC\u5E73\u65F6\u7F16\u5199\u51FD\u6570\u65F6\uFF0C\u5185\u90E8\u7684\u53D8\u91CF\u5F88\u5C11\u662F\u56FA\u5B9A\u7684\uFF0C\u8FD9\u4E5F\u5C31\u4F7F\u5F97\u6211\u4EEC\u7684\u51FD\u6570\u9700\u8981\u63A5\u53D7\u5F88\u591A\u53C2\u6570\uFF0C\u50CF<code>\u751F\u6210\u5668\u51FD\u6570</code>\u8FD9\u79CD\u7279\u6B8A\u7684\u51FD\u6570\u6211\u4EEC\u5E94\u8BE5\u5982\u4F55\u4F20\u9012\u53C2\u6570\u5462\uFF1F\u6211\u4EEC\u5148\u6765\u8BD5\u8BD5\u548C\u666E\u901A\u51FD\u6570\u90A3\u6837\u4F20\u9012\u53C2\u6570\u8BD5\u8BD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8BF6\uFF1F\u8FD8\u771F\u7684\u53EF\u4EE5\u4F20\u9012\u53C2\u6570\uFF0C\u4F46\u662F\u53C8\u6709\u4E00\u4E2A\u95EE\u9898\uFF0C\u5982\u679C\u5728\u7B2C\u4E8C\u4E2A<code>yield</code>\u7684\u90A3\u90E8\u5206\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u4E5F\u60F3\u63A5\u6536\u4E00\u4E2A<strong>\u65B0\u7684\u53C2\u6570</strong>\u600E\u4E48\u529E\u5462\uFF1F\u5982\u679C\u6211\u4EEC\u5728\u8C03\u7528<code>next</code>\u7684\u65F6\u5019\u8FDB\u884C\u4F20\u53C2\uFF0C\u6211\u4EEC\u8FD8\u53EF\u4EE5\u7528<strong>\u5F62\u53C2</strong>\u63A5\u6536\u5417\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5F88\u9057\u61BE\uFF0C\u6211\u4EEC\u62FF\u5230\u7684 num \u4F9D\u65E7\u662F 1\uFF0C\u90A3\u4E48\u6211\u4EEC\u8BE5\u5982\u4F55\u83B7\u53D6\u5230\u6211\u4EEC<strong>\u4F20\u9012\u7684\u53C2\u6570</strong>\u5462\uFF1F\u5176\u5B9E\u5728\u7B2C\u4E00\u4E2A<code>yield</code>\u5173\u952E\u5B57\u4E4B\u540E\u7684\u4EE3\u7801\u5982\u679C\u6211\u4EEC\u518D\u60F3\u4F20\u9012\u53C2\u6570\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u5728\u8C03\u7528<code>next</code>\u7684\u65F6\u5019\u8FDB\u884C\u4F20\u53C2\uFF0C\u800C\u6211\u4EEC\u4F20\u9012\u7684\u53C2\u6570\u4F1A\u4F5C\u4E3A<code>\u4E0A\u4E00\u4E2Ayield</code>\u7684\u8FD4\u56DE\u503C\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u8BD5\u8BD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="\u751F\u6210\u5668\u7684-return" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u7684-return" aria-hidden="true">#</a> \u751F\u6210\u5668\u7684 return</h4><p>\u5728\u6211\u4EEC\u7684<code>\u8FED\u4EE3\u5668</code>\u4E2D\uFF0C\u9664\u4E86<code>next</code>\u65B9\u6CD5\uFF0C\u8FD8\u6709<code>return</code>\u65B9\u6CD5\u53EF\u4EE5\u76D1\u542C\u6211\u4EEC\u7684\u8FED\u4EE3\u5668\u7EC8\u6B62\uFF0C\u90A3\u4E48<code>\u751F\u6210\u5668</code>\u4E2D\u662F\u5426\u6709<code>return</code>\u65B9\u6CD5\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token keyword">yield</span> num<span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 1, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: undefined, done: true}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6211\u4EEC\u53D1\u73B0\uFF0C<code>\u751F\u6210\u5668</code>\u4E2D\u5982\u679C\u8C03\u7528<code>return</code>\uFF0C\u4E5F\u4F1A\u63D0\u524D\u7EC8\u6B62<code>\u751F\u6210\u5668\u51FD\u6570</code>\uFF0C\u540E\u7EED\u7684<code>next</code>\u4E5F\u4E0D\u4F1A\u6267\u884C\u3002</p><p>\u90A3\u4E48<code>return</code>\u65B9\u6CD5\u80FD\u4E0D\u80FD\u4F20\u53C2\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token keyword">yield</span> num<span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 1, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 2, done: true}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6211\u4EEC\u53D1\u73B0\uFF0C<code>return</code>\u65B9\u6CD5\u4E2D\u4E5F\u53EF\u4EE5\u4F20\u53C2\uFF0C\u5176\u5B9E\u5F53\u6211\u4EEC\u8C03\u7528<code>return</code>\u7684\u65F6\u5019\uFF0C\u5B83\u7684\u5185\u90E8\u662F\u76F8\u5F53\u4E8E\u5728\u4E0A\u6B21<code>yield</code>\u548C\u672C\u6B21<code>yield</code>\u76F4\u63A5\u63D2\u5165\u4E00\u4E2A<code>return</code>\u8BED\u53E5\uFF0C<strong>\u63D0\u524D\u7EC8\u6B62\u4E86\u751F\u6210\u5668\u51FD\u6570\u7684\u6267\u884C</strong>\u3002\u7C7B\u4F3C\u8FD9\u6837\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> num1 <span class="token operator">=</span> <span class="token keyword">yield</span> num<span class="token punctuation">;</span>

  <span class="token comment">// \u5728\u6B64\u5904\u63D2\u5165return</span>
  <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 1, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 2, done: true}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="\u751F\u6210\u5668\u7684\u629B\u51FA\u5F02\u5E38-throw" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u7684\u629B\u51FA\u5F02\u5E38-throw" aria-hidden="true">#</a> \u751F\u6210\u5668\u7684\u629B\u51FA\u5F02\u5E38\uFF08throw\uFF09</h4><p>\u5728<code>\u751F\u6210\u5668</code>\u4E2D\uFF0C\u542B\u6709\u4E00\u4E2A<code>throw</code>\u65B9\u6CD5\uFF0C\u5B83\u662F\u5E72\u561B\u7528\u7684\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u7B2C\u4E00\u4E2Ayield\u6267\u884C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u7B2C\u4E8C\u4E2Ayield\u6267\u884C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B2C\u4E00\u4E2Ayield\u6267\u884C</span>
fun<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Uncaught undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6211\u4EEC\u53D1\u73B0\uFF0C\u5F53\u8C03\u7528<code>throw</code>\u65B9\u6CD5\u65F6\uFF0C\u7B2C\u4E8C\u6BB5\u4EE3\u7801\u538B\u6839\u6CA1\u6709\u6267\u884C\uFF0C\u6211\u4EEC\u731C\u6D4B\u662F\u4E0D\u662F\u5728\u7B2C\u4E00\u4E2A yield \u7684\u65F6\u5019\u4EA7\u751F\u4E86\u5F02\u5E38\u5462\uFF1F\u6211\u4EEC\u5C1D\u8BD5\u7528<code>try...catch</code>\u8BED\u53E5\u6355\u83B7\u4E00\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u7B2C\u4E00\u4E2Ayield\u6267\u884C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6355\u83B7\u5230\u4E86\u5F02\u5E38\uFF1A&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u7B2C\u4E8C\u4E2Ayield\u6267\u884C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B2C\u4E00\u4E2Ayield\u6267\u884C \u6355\u83B7\u5230\u4E86\u5F02\u5E38\uFF1A undefined</span>
fun<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B2C\u4E8C\u4E2Ayield\u6267\u884C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u679C\u7136\uFF0C\u5728 try...catch \u4E2D\u6211\u4EEC\u6355\u83B7\u5230\u4E86\u5F02\u5E38\uFF0C\u8FD9\u4E2A\u5F02\u5E38\u503C\u662F\u4E00\u4E2A undefined\uFF0C\u96BE\u9053\u8FD9\u4E2A\u503C\u662F throw \u7684\u53C2\u6570\uFF1F\u4E5F\u5C31\u662F\u6211\u4EEC\u7B2C\u4E00\u4E2A yield \u7684\u8FD4\u56DE\u503C\uFF1F\u6211\u4EEC\u8BD5\u8BD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u7B2C\u4E00\u4E2Ayield\u6267\u884C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6355\u83B7\u5230\u4E86\u5F02\u5E38\uFF1A&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u7B2C\u4E8C\u4E2Ayield\u6267\u884C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token function">generatorFun</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
fun<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B2C\u4E00\u4E2Ayield\u6267\u884C \u6355\u83B7\u5230\u4E86\u5F02\u5E38\uFF1A 2</span>
fun<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B2C\u4E8C\u4E2Ayield\u6267\u884C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u7684\u786E\u662F\u8FD9\u6837\u7684\uFF0C\u6211\u4EEC throw \u7684\u9519\u8BEF\u4FE1\u606F\uFF0C\u53EF\u4EE5\u88AB\u6B63\u786E\u7684\u6355\u83B7\u5230\u3002</p><h3 id="\u751F\u6210\u5668\u548C\u8FED\u4EE3\u5668\u7684\u66FF\u4EE3" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u548C\u8FED\u4EE3\u5668\u7684\u66FF\u4EE3" aria-hidden="true">#</a> \u751F\u6210\u5668\u548C\u8FED\u4EE3\u5668\u7684\u66FF\u4EE3</h3><p>\u65E2\u7136<code>\u751F\u6210\u5668\u51FD\u6570</code>\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A<code>\u7279\u6B8A\u7684\u8FED\u4EE3\u5668</code>\uFF0C\u90A3\u4E48\u6211\u4EEC\u4E0A\u9762\u81EA\u5DF1\u5C01\u88C5\u7684\u521B\u9020\u751F\u6210\u5668\u7684\u51FD\u6570\u662F\u5426\u53EF\u4EE5\u76F4\u63A5\u7528\u751F\u6210\u5668\u51FD\u6570\u66FF\u4EE3\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> item<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 1, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 2, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 3, done: false}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u6211\u4EEC\u53D1\u73B0\uFF0C\u5F53\u6211\u4EEC\u5229\u7528\u751F\u6210\u5668\u51FD\u6570\u6765\u5C01\u88C5\u8FD9\u4E2A\u65B9\u6CD5\u7684\u65F6\u5019\u7684\u786E\u7B80\u5355\u4E86\u5F88\u591A\uFF0C\u867D\u7136\u6CA1\u4EC0\u4E48\u5375\u7528\u3002</p><p>\u540E\u6765\u6211\u53D1\u73B0\uFF0C\u8FD8\u6709\u4E00\u4E2A\u5173\u952E\u5B57<code>yield*</code>\uFF0C\u5B83\u662F\u4EC0\u4E48\u5462\uFF1F</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li>\u8BE5\u8868\u8FBE\u5F0F\u7528\u4E8E\u59D4\u6258\u7ED9\u53E6\u4E00\u4E2A generator \u6216\u53EF\u8FED\u4EE3\u5BF9\u8C61\u3002</li><li>\u8BE5\u8868\u8FBE\u5F0F\u8FED\u4EE3\u64CD\u4F5C\u5BF9\u8C61\uFF0C\u5E76\u4EA7\u751F\u5B83\u8FD4\u56DE\u7684\u6BCF\u4E2A\u503C\u3002</li><li>\u8BE5\u8868\u8FBE\u5F0F\u672C\u8EAB\u7684\u503C\u662F\u5F53\u8FED\u4EE3\u5668\u5173\u95ED\u65F6\u8FD4\u56DE\u7684\u503C\uFF08\u5373 done \u4E3A true \u65F6\uFF09</li></ul></div><p>\u5927\u6982\u662F\u4EC0\u4E48\u610F\u601D\u5462\uFF1F\u610F\u601D\u5C31\u662F<code>yield*</code>\u8868\u8FBE\u5F0F\u4E4B\u540E\u53EF\u4EE5\u8DDF\u4E00\u4E2A<code>\u53EF\u8FED\u4EE3\u5BF9\u8C61</code>\u6216\u8005<code>\u751F\u6210\u5668\u51FD\u6570</code>\uFF0C\u7136\u540E\u5B83\u5C31\u4F1A\u4F9D\u6B21\u8FED\u4EE3\u8FD9\u4E2A<code>\u53EF\u8FED\u4EE3\u5BF9\u8C61</code>\u6216\u8005<code>\u751F\u6210\u5668\u51FD\u6570</code>\uFF0C\u7528\u4EE3\u7801\u6765\u89E3\u91CA\u5C31\u662F\u8FD9\u6837\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">g1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">g2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">g1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B64\u65F6\u7684g2\u76F8\u5F53\u4E8E\u4EC0\u4E48\u5462\uFF1F\u5B83\u5C31\u76F8\u5F53\u4E8E\uFF1A</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">g2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">4</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E5F\u5C31\u662F\u8BF4yield*\u53EF\u4EE5\u628A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u6216\u4E00\u4E2A\u751F\u6210\u5668\u8FDB\u884C\u904D\u5386</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u90A3\u4E48\u6211\u4EEC\u4E0A\u9762\u7684\u4EE3\u7801\u5C31\u53EF\u4EE5\u8FD9\u4E48\u5199\u4E86\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 1, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 2, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 3, done: false}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u597D\u4E86\uFF0C<code>\u8FED\u4EE3\u5668</code>\u548C<code>\u751F\u6210\u5668</code>\u7684\u5185\u5BB9\u5C31\u5230\u6B64\u544A\u4E00\u6BB5\u843D\u5427\uFF0C\u4E0D\u65E9\u4E86\uFF0C\u7D2F\u4E86\uFF0C\u4E5F\u8BE5\u4F11\u606F\u4E86...</p>`,99);function m(f,y){const a=t("ExternalLinkIcon");return e(),o(l,null,[i,n("p",null,[n("a",k,[b,c(a)])]),d],64)}var v=p(r,[["render",m],["__file","9.\u8FED\u4EE3\u5668\u548C\u751F\u6210\u5668.html.vue"]]);export{v as default};
